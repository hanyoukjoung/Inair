package kr.or.inair.admin.itemmanagement.dao;

import java.util.List;
import java.util.Map;

import kr.or.inair.vo.ClassOfPositionVO;
import kr.or.inair.vo.LanguageVO;
import kr.or.inair.vo.SalaryVO;

public interface ItemManagementDao {
	/**
	 * list를 출력하는 매서드 
	 * @date 2020-05-25
	 * @author 한유경
	 * @return
	 * @throws Exception
	 */
	public List<LanguageVO> adminLanguageList(Map<String, String> params) throws Exception;
	/**
	 * 검색할 키워드를 params로 받아서 해당하는 게시글의 갯수를 반환하는 매서드 
	 * @date 2020-05-26
	 * @author 한유경
	 * @param params
	 * @return
	 * @throws Exception
	 */
	public String totalCount(Map<String, String> params) throws Exception;
	/**
	 * 언어vo를 받아서 insert 해주는 매서드 
	 * @date 2020-05-26
	 * @author 한유경
	 * @param languageInfo
	 * @throws Exception
	 */
	public void insertLanguage(LanguageVO languageInfo) throws Exception;
	/**
	 * lang_num을 받아서 delete해주는 매서드
	 * @date 2020-05-26
	 * @author 한유경
	 * @param params
	 * @throws Exception
	 */
	public void deleteLanguage(Map<String, String> params) throws Exception;
	/**
	 * params를 받아서 전체list를 보여주는 매서드 
	 * @date 2020-05-27
	 * @author 한유경
	 * @param params
	 * @return
	 * @throws Exception
	 */
	public List<SalaryVO> salaryList(Map<String, String> params) throws Exception; 
	/**
	 * 게시글의 갯수를 반환해주는 매서드 
	 * @date 2020-05-27
	 * @author 한유경
	 * @return
	 * @throws Exception
	 */
	public String getAdminTotalCount() throws Exception;
	/**
	 * vo를 받아서 insert 시키는 매서드 
	 * @date 2020-05-27
	 * @author 한유경
	 * @param salaryInfo
	 * @throws Exception
	 */
	public void insertSalary(SalaryVO salaryInfo) throws Exception;
	/**
	 * params를 받아서 삭제하는 매서드 
	 * @date 2020-05-27
	 * @author 한유경
	 * @param params
	 * @throws Exception
	 */
	public void deleteSalary(Map<String, String> params) throws Exception;
	/**
	 * 직급항목 리스트를 출력하는 매서드 
	 * @date 2020-05-27
	 * @author 한유경
	 * @param params
	 * @return
	 * @throws Exception
	 */
	public List<ClassOfPositionVO> classOfPositionList(Map<String, String> params) throws Exception;
	/**
	 * 전체리스트 갯수를 출력하는 매서드 
	 * @date 2020-05-27
	 * @author 한유경
	 * @param params
	 * @return
	 * @throws Exception
	 */
	public String clsfTotal(Map<String, String> params) throws Exception;
	/**
	 * 직급항목을 추가하는 매서드
	 * @date 2020-05-27
	 * @author 한유경
	 * @param clsfInfo
	 * @throws Exception
	 */
	public void insertClsf(ClassOfPositionVO clsfInfo) throws Exception;
	/**
	 * clsf_delete를 받아서 삭제하는 매서드
	 * @date 2020-05-27
	 * @author 한유경
	 * @param params
	 * @throws Exception
	 */
	public void deleteClsf(Map<String, String> params) throws Exception;
	
	
	
}
