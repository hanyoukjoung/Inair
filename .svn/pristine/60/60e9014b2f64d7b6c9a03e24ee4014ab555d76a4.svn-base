package kr.or.inair.controller.admin;

import java.util.List;
import java.util.Map;

import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpSession;

import kr.or.inair.admin.itemmanagement.service.ItemManagementService;
import kr.or.inair.utiles.CryptoGenerator;
import kr.or.inair.utiles.RolePagingUtile;
import kr.or.inair.vo.ClassOfPositionVO;
import kr.or.inair.vo.LanguageVO;




import kr.or.inair.vo.SalaryVO;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.ResponseBody;
import org.springframework.web.servlet.ModelAndView;

//항목관리 페이지
@Controller
@RequestMapping("/admin/ItemManagement/")
public class AdminItemManagementController {
	
	@Autowired
	private ItemManagementService itemManagementService;
	
	@Autowired
	private RolePagingUtile rolePagingUtile;
	
	//언어항목
	@RequestMapping("itemManagementHome")
	public ModelAndView itemManagementHome(HttpSession session
										  ,HttpServletRequest request
										  ,ModelAndView andView
										  ,String currentPage
										  ,String search_keycode
										  ,String search_keyword
										  ,String paginationHTML
										  ,Map<String,String> params) throws Exception{
		
		params = CryptoGenerator.getGeneratePairKey(session);
		
		currentPage = currentPage == null ? "1" :currentPage;
		
		params.put("currentPage", currentPage);
		params.put("search_keycode", search_keycode);
		params.put("search_keyword", search_keyword);
		
		//언어
		String totalCount = itemManagementService.totalCount(params);
		rolePagingUtile.adminBoardPagination(request, Integer.parseInt(totalCount),Integer.parseInt(currentPage), search_keyword, search_keycode);
		String startCount = String.valueOf(rolePagingUtile.getStartCount());
		String endCount = String.valueOf(rolePagingUtile.getEndCount());
		
	
		
		
		params.put("startCount", startCount);
		params.put("endCount", endCount);
		
		paginationHTML = rolePagingUtile.getPagingHtmls();
		
		List<LanguageVO> languageList = this.itemManagementService.adminLanguageList(params);
		andView.addObject("search_keyword",search_keyword);
		andView.addObject("search_keycode", search_keycode);
		andView.addObject("publicKeyMap", params);
		andView.addObject("paginationHTML", paginationHTML);
		andView.addObject("languageList", languageList);
		andView.setViewName("admin/ItemManagement/itemManagementHome");
		return andView;
	}
	//급여항목
	@RequestMapping("itemSalaryManagement")
	public ModelAndView salaryItemManageHome(HttpSession session
											,HttpServletRequest request
											,ModelAndView andView
											,String currentPage
											,String search_keycode
											,String search_keyword
											,String paginationHTML
											,Map<String,String> params) throws Exception{
		
		params = CryptoGenerator.getGeneratePairKey(session);
		currentPage = currentPage == null ? "1" :currentPage;
		params.put("currentPage", currentPage);

		//언어
		String totalCount = itemManagementService.getAdminTotalCount();
		rolePagingUtile.adminBoardPagination(request, Integer.parseInt(totalCount),Integer.parseInt(currentPage), search_keyword, search_keycode);
		String startCount = String.valueOf(rolePagingUtile.getStartCount());
		String endCount = String.valueOf(rolePagingUtile.getEndCount());
		
		params.put("startCount", startCount);
		params.put("endCount", endCount);
		
		paginationHTML = rolePagingUtile.getPagingHtmls();
		
		List<SalaryVO> salaryList = this.itemManagementService.salaryList(params);

		andView.addObject("publicKeyMap", params);
		andView.addObject("paginationHTML", paginationHTML);
		andView.addObject("salaryList", salaryList);

		andView.setViewName("admin/ItemManagement/salaryItemManagementHome");
		return andView;
	}

	//언어항목 추가 
	@ResponseBody
	@RequestMapping("insertLang")
	public void insertLang(LanguageVO languageInfo) throws Exception{
		this.itemManagementService.insertLanguage(languageInfo);
	}
	
	//언어항목 삭제 
	@ResponseBody
	@RequestMapping("deleteLang")
	public void deleteLang(Map<String, String> params
						  ,String lang_num) throws Exception{
		params.put("lang_num", lang_num);
		this.itemManagementService.deleteLanguage(params);
		
	}
	
	//급여항목 추가 
	@ResponseBody
	@RequestMapping("insertSalary")
	public void insertSalary(SalaryVO salaryInfo) throws Exception{
		this.itemManagementService.insertSalary(salaryInfo);
		
	}
	//급여항목 삭제 
	@ResponseBody
	@RequestMapping("deleteSalary")
	public void deleteSalary(Map<String, String> params
							,String salary_num) throws Exception{
		params.put("salary_num", salary_num);
		this.itemManagementService.deleteSalary(params);
	}
	
	//직급항목
	@RequestMapping("itemClsfManagement")
	public ModelAndView classOfPositionHome(HttpSession session
											,HttpServletRequest request
											,ModelAndView andView
											,String currentPage
											,String search_keycode
											,String search_keyword
											,String paginationHTML
											,Map<String,String> params) throws Exception{
		
		params = CryptoGenerator.getGeneratePairKey(session);
		currentPage = currentPage == null ? "1" :currentPage;
		params.put("currentPage", currentPage);

		//직급항목
		String totalCount = itemManagementService.clsfTotal(params);
		rolePagingUtile.adminBoardPagination(request, Integer.parseInt(totalCount),Integer.parseInt(currentPage), search_keyword, search_keycode);
		String startCount = String.valueOf(rolePagingUtile.getStartCount());
		String endCount = String.valueOf(rolePagingUtile.getEndCount());
		
		params.put("startCount", startCount);
		params.put("endCount", endCount);
		
		paginationHTML = rolePagingUtile.getPagingHtmls();
		
		List<ClassOfPositionVO> clsfList = this.itemManagementService.classOfPositionList(params);

		andView.addObject("publicKeyMap", params);
		andView.addObject("paginationHTML", paginationHTML);
		andView.addObject("clsfList", clsfList);

		andView.setViewName("admin/ItemManagement/classOfPositionHome");
		return andView;
	}
	//직급항목 추가 
	@ResponseBody
	@RequestMapping("insertClsf")
	public void insertClsf(ClassOfPositionVO clsfInfo) throws Exception{
		this.itemManagementService.insertClsf(clsfInfo);
	}
	//직급항목 삭제
	@ResponseBody
	@RequestMapping("deleteClsf")
	public void deleteClsf(Map<String, String> params
						  ,String clsf_num) throws Exception{
		params.put("clsf_num", clsf_num);
		this.itemManagementService.deleteClsf(params);
		
	}
	
	
	
	
	
	
	
	
	
	
	
	
	
	

	
	
	
	
	
	
}
