package kr.or.inair.admin.itemmanagement.dao;

import java.util.List;
import java.util.Map;

import kr.or.inair.vo.ClassOfPositionVO;
import kr.or.inair.vo.LanguageVO;
import kr.or.inair.vo.SalaryVO;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Repository;

import com.ibatis.sqlmap.client.SqlMapClient;
@Repository
public class ItemManagementDaoImpl implements ItemManagementDao {
	@Autowired
	private SqlMapClient client;
	
	@Override
	public List<LanguageVO> adminLanguageList(Map<String, String> params) throws Exception {
		return client.queryForList("language.adminLanguageList",params);
	}

	@Override
	public String totalCount(Map<String, String> params) throws Exception {
		return (String) client.queryForObject("language.totalCount", params);
	}

	@Override
	public void insertLanguage(LanguageVO languageInfo) throws Exception {
		client.insert("language.insertLanguage", languageInfo);
		
	}

	@Override
	public void deleteLanguage(Map<String, String> params) throws Exception {
		client.update("language.deleteLanguage", params);
		
	}

	@Override
	public List<SalaryVO> salaryList(Map<String, String> params)
			throws Exception {
		return client.queryForList("salary.adminSalaryList", params);
	}

	@Override
	public String getAdminTotalCount() throws Exception {
		// TODO Auto-generated method stub
		return (String) client.queryForObject("salary.getAdminTotalCount");
	}

	@Override
	public void insertSalary(SalaryVO salaryInfo) throws Exception {
		client.insert("salary.insertSalary", salaryInfo);
		
	}

	@Override
	public void deleteSalary(Map<String, String> params) throws Exception {
		client.update("salary.deleteSalary", params);
		
	}

	@Override
	public List<ClassOfPositionVO> classOfPositionList(
			Map<String, String> params) throws Exception {
		return client.queryForList("classOfPosition.selectAllClsf", params);
	}

	@Override
	public String clsfTotal(Map<String, String> params) throws Exception {
		return (String) client.queryForObject("classOfPosition.totalClsf", params);
	}

	@Override
	public void insertClsf(ClassOfPositionVO clsfInfo) throws Exception {
		client.insert("classOfPosition.insertClsf", clsfInfo);
		
	}

	@Override
	public void deleteClsf(Map<String, String> params) throws Exception {
		client.delete("classOfPosition.deleteClsf", params);
		
	}
}
